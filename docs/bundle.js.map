{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://card-game/webpack/bootstrap","webpack://card-game/webpack/runtime/define property getters","webpack://card-game/webpack/runtime/hasOwnProperty shorthand","webpack://card-game/./components/result-component.ts","webpack://card-game/./components/game-component.ts","webpack://card-game/./components/function-for-test.ts","webpack://card-game/./components/start-page-component.ts","webpack://card-game/./index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { gameField, resetGame } from '../index'\n\nexport const renderResultModule = () => {\n    const moduleResultEl = document.getElementById('module') as HTMLElement\n    moduleResultEl.style.display = 'flex'\n\n    moduleResultEl.innerHTML = `\n      <dialog>\n        <img class=\"info-img\" src=\"./static/${\n            gameField.status === 'won' ? 'celebration' : 'dead'\n        }.svg\" alt=\"\" />\n        <p class=\"title result-title\">${\n            gameField.status === 'won' ? 'Вы выиграли!' : 'Вы проиграли!'\n        }</p>\n        <p class=\"result-title-time\">Затраченное время:</p>\n        <div class=\"timer\">\n          <div class=\"timer-count result-count\">${gameField.gameTime}</div>\n        </div>\n        <div>\n          <button type=\"submit\" class=\"result-go-button button\" id=\"button-go\">\n          Играть снова\n          </button>\n        </div>\n      </dialog>`\n\n    const resultDialog: any = document.querySelector('dialog')\n    resultDialog.showModal()\n\n    const newGameButton = document.querySelector(\n        '.result-go-button',\n    ) as HTMLElement\n\n    newGameButton.addEventListener('click', () => {\n        moduleResultEl.style.display = 'none'\n        resultDialog.close()\n        resetGame()\n    })\n}\n","import { gameField, resetGame } from '../index'\nimport { renderResultModule } from './result-component'\n\nconst compareCards: number[] = []\n\nlet cardPairsCompele = 0\nlet counter = 0\nlet timer: NodeJS.Timer\n\nexport const renderGame = () => {\n    console.log(gameField)\n\n    const headerHtml = `\n    <header class=\"header\">\n        <div class=\"timer\">\n            <div class=\"timer-text\">\n                <div class=\"timer-min\">min</div>\n                <div class=\"timer-sec\">sek</div>\n            </div>\n            <div class=\"timer-count\" >${gameField.gameTime}</div>\n        </div>\n        <button id=\"new-game-button\" class=\"header-button button\">Начать заново</button>\n    </header>`\n\n    const cardsHtml = gameField.cardDeck\n        .map((card, index) => {\n            console.log('current card is ', card)\n\n            return `<div class=\"card\" id=\"card\" data-index=\"${index}\" data-id=\"${\n                card.id\n            }\" data-suit=\"${card.suit}\" data-rank=\"${card.rank}\">\n            ${\n                gameField.isActive\n                    ? `<div class=\"card-front\">\n                <div class=\"card-top\">\n                    <div class=\"card-title\">${card.rank}</div>\n                    <img class=\"card-suites-small\" src=\"./static/${card.suit}.svg\" alt=\"\" />\n                </div>\n                <div class=\"card-suites\">\n                    <img src=\"./static/${card.suit}.svg\" alt=\"\" />\n                </div>\n                <div class=\"card-top card-top-flipped\">\n                    <div class=\"card-title\">${card.rank}</div>\n                        <img class=\"card-suites-small\" src=\"./static/${card.suit}.svg\" alt=\"\" />\n                </div>\n            </div>`\n                    : `\n                    <img src=\"./static/card-back.svg\" alt=\"карта\" class=\"card-back\"/>`\n            }\n              </div>`\n        })\n        .join('')\n\n    const appEl = document.getElementById('app') as HTMLElement\n\n    if (appEl) {\n        appEl.innerHTML = `\n      ${headerHtml}\n      <section class=\"game-field\">\n      ${cardsHtml}\n      </section>`\n    }\n\n    if (!gameField.isActive) {\n        timer = setInterval(() => {\n            counter++\n            const minutes = Math.floor(counter / 60)\n                .toString()\n                .padStart(2, '0')\n            const seconds = (counter % 60).toString().padStart(2, '0')\n            const timeCount = document.querySelector(\n                '.timer-count',\n            ) as HTMLElement\n\n            gameField.gameTime = `${minutes}.${seconds}`\n            timeCount.textContent = gameField.gameTime\n        }, 1000)\n        counter = 0\n    }\n\n    const cards: any = document.querySelectorAll('.card')\n\n    for (const card of cards) {\n        card.addEventListener('click', (event: MouseEvent) => {\n            console.log(card.dataset.index)\n\n            const cardItem = gameField.cardDeck[card.dataset.index]\n\n            event.stopPropagation()\n\n            if (cardItem.isActive) {\n                console.log('Карта уже перевернута')\n                return\n            }\n\n            cardItem.isActive = !cardItem.isActive\n\n            compareCards.push(cardItem.id)\n\n            const suit = card.dataset.suit\n            const rank = card.dataset.rank\n\n            console.log(`rank: ${rank}, suit: ${suit}`)\n\n            const renderCardFront = () => {\n                card.innerHTML = `\n                <div class=\"card-front\">\n                    <div class=\"card-top\">\n                        <div class=\"card-title\">${rank}</div>\n                        <img class=\"card-suites-small\" src=\"./static/${suit}.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"card-suites\">\n                        <img src=\"./static/${suit}.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"card-top card-top-flipped\">\n                        <div class=\"card-title\">${rank}</div>\n                        <img class=\"card-suites-small\" src=\"./static/${suit}.svg\" alt=\"\" />\n                    </div>\n                </div>`\n                return\n            }\n            renderCardFront()\n\n            if (compareCards.length === 2) {\n                if (compareCards[0] === compareCards[1]) {\n                    cardPairsCompele++\n\n                    if (cardPairsCompele === gameField.difficultLevel) {\n                        clearInterval(timer)\n                        gameField.status = 'won'\n                        renderResultModule()\n                    }\n                } else {\n                    clearInterval(timer)\n                    gameField.status = 'lost'\n                    renderResultModule()\n                }\n                compareCards.length = 0\n            }\n        })\n    }\n\n    const newGameButtonEl = document.getElementById(\n        'new-game-button',\n    ) as HTMLElement\n\n    if (newGameButtonEl) {\n        newGameButtonEl.addEventListener('click', () => {\n            clearInterval(timer)\n            resetGame()\n        })\n    }\n}\n","import { gameField, getCardRank } from \"../index\"\nimport { renderGame } from \"./game-component\"\n\nexport const getCardSuit = (card: number) => {\n    if (card > 0 && card <= 9) {\n        const suit = gameField.cardSuits[3]\n        return suit\n    }\n\n    if (card > 9 && card <= 18) {\n        const suit = gameField.cardSuits[1]\n        return suit\n    }\n\n    if (card > 18 && card <= 27) {\n        const suit = gameField.cardSuits[0]\n        return suit\n    }\n\n    const suit = gameField.cardSuits[2]\n    return suit\n}\n\nexport function getShufflePairs(count: number) {\n    gameField.difficultLevel = count\n\n    let pairs = []\n\n    for (let i = 0; i < count; i++) {\n        let cardIndex = Math.floor(Math.random() * gameField.cardDeck.length)\n        let card = gameField.cardDeck[cardIndex]\n\n        pairs.push(card)\n        pairs.push(card)\n\n        gameField.cardDeck.splice(cardIndex, 1)\n    }\n    const shuffledIds = pairs.sort(() => Math.random() - 0.5)\n\n    const cards = shuffledIds.map((item) => {\n        const cardSuit = getCardSuit(item)\n        const cardRank = getCardRank(item)\n\n        return {\n            id: item,\n            rank: cardRank,\n            suit: cardSuit,\n            isActive: false,\n        }\n    })\n    gameField.cardDeck = cards\n    console.log('gameField.cardDeck', gameField.cardDeck)\n\n    renderGame()\n\n    return setTimeout(() => {\n        gameField.isActive = false\n        renderGame()\n    }, 5000)\n}\n","import { getShufflePairs } from '../components/function-for-test'\n\nexport const renderStartPage = () => {\n    const appEl = document.getElementById('app') as HTMLElement\n    if (appEl) {\n        appEl.innerHTML = `\n      <div class=\"container\">\n      <div class=\"info\">\n          <p class=\"title\">Выбери<br>сложность</p>\n          <form id=\"form\" class=\"form\" >\n                <div class=\"form-level\">\n                    <input type=\"radio\" name=\"level\" value=\"easy\" id=\"easy-level\">\n                    <label for=\"easy-level\" class=\"form-level-choice\">1</label>\n                    <input type=\"radio\" name=\"level\" value=\"average\" id=\"average-level\">\n                    <label for=\"average-level\" class=\"form-level-choice\">2</label>\n                    <input type=\"radio\" name=\"level\" value=\"difficult\" id=\"difficult-level\">\n                    <label for=\"difficult-level\" class=\"form-level-choice\">3</label>\n                </div>\n                <div>\n                    <button type=\"submit\" class=\"button\">Старт</button>\n                </div>\n            </form>\n  </div>\n    `\n    }\n    const formEl: any = document.getElementById('form')\n\n    if (formEl) {\n        formEl.addEventListener('submit', (event: MouseEvent) => {\n            event.preventDefault()\n\n            if (formEl[0].checked) {\n                return getShufflePairs(3)\n            }\n            if (formEl[1].checked) {\n                return getShufflePairs(6)\n            }\n            if (formEl[2].checked) {\n                return getShufflePairs(9)\n            }\n        })\n    }\n}\n","import './style.css'\nimport { renderStartPage } from './components/start-page-component'\n\ntype GameField = {\n    gameTime: string\n    cardSuits: string[]\n    cardRanks: string[]\n    gameFieldSize: number\n    cardDeck: any[]\n    isActive: boolean\n    difficultLevel: number\n    status: string\n}\n\nexport let gameField: GameField = {\n    gameTime: '00.00',\n    cardSuits: ['diamonds', 'hearts', 'clubs', 'spades'],\n    cardRanks: ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'],\n    gameFieldSize: 36,\n    cardDeck: [],\n    isActive: true,\n    difficultLevel: 0,\n    status: '',\n}\n\nrenderStartPage()\n\nfor (let i = 0; i < gameField.gameFieldSize; i++) {\n    gameField.cardDeck[i] = i + 1\n}\n\n\nexport const getCardRank = (card: number) => {\n    if (card === 1 || card === 10 || card === 19 || card === 28) {\n        const rank = gameField.cardRanks[8]\n        return rank\n    }\n\n    if (card === 2 || card === 11 || card === 20 || card === 29) {\n        const rank = gameField.cardRanks[7]\n        return rank\n    }\n    if (card === 3 || card === 12 || card === 21 || card === 30) {\n        const rank = gameField.cardRanks[6]\n        return rank\n    }\n    if (card === 4 || card === 13 || card === 22 || card === 31) {\n        const rank = gameField.cardRanks[5]\n        return rank\n    }\n    if (card === 5 || card === 14 || card === 23 || card === 32) {\n        const rank = gameField.cardRanks[4]\n        return rank\n    }\n    if (card === 6 || card === 15 || card === 24 || card === 33) {\n        const rank = gameField.cardRanks[3]\n        return rank\n    }\n    if (card === 7 || card === 16 || card === 25 || card === 34) {\n        const rank = gameField.cardRanks[2]\n        return rank\n    }\n    if (card === 8 || card === 17 || card === 26 || card === 35) {\n        const rank = gameField.cardRanks[1]\n        return rank\n    }\n\n    const rank = gameField.cardRanks[0]\n    return rank\n}\n\nexport function resetGame() {\n    gameField = {\n        gameTime: '00.00',\n        cardSuits: ['diamonds', 'hearts', 'clubs', 'spades'],\n        cardRanks: ['6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'],\n        gameFieldSize: 36,\n        cardDeck: [],\n        isActive: true,\n        difficultLevel: 0,\n        status: '',\n    }\n\n    renderStartPage()\n    for (let i = 0; i < gameField.gameFieldSize; i++) {\n        gameField.cardDeck[i] = i + 1\n    }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","timer","renderResultModule","moduleResultEl","document","getElementById","style","display","innerHTML","gameField","status","gameTime","resultDialog","querySelector","showModal","addEventListener","close","resetGame","compareCards","cardPairsCompele","counter","renderGame","console","log","headerHtml","cardsHtml","cardDeck","map","card","index","id","suit","rank","isActive","join","appEl","setInterval","minutes","Math","floor","toString","padStart","seconds","timeCount","textContent","event","dataset","cardItem","stopPropagation","push","length","difficultLevel","clearInterval","querySelectorAll","newGameButtonEl","getShufflePairs","count","pairs","i","cardIndex","random","splice","cards","sort","item","cardSuit","cardSuits","getCardSuit","getCardRank","setTimeout","renderStartPage","formEl","preventDefault","checked","cardRanks","gameFieldSize"],"sourceRoot":""}